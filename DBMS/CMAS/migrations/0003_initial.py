# Generated by Django 4.1.3 on 2022-12-05 23:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('CMAS', '0002_delete_user'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('assessmentid', models.AutoField(db_column='AssessmentID', primary_key=True, serialize=False)),
                ('assessmentname', models.CharField(blank=True, db_column='AssessmentName', max_length=45, null=True)),
                ('totalmarks', models.IntegerField(blank=True, db_column='TotalMarks', null=True)),
            ],
            options={
                'db_table': 'assessment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clo',
            fields=[
                ('cloid', models.AutoField(db_column='CLOID', primary_key=True, serialize=False)),
                ('clonum', models.CharField(db_column='CLONum', max_length=45)),
                ('clodescription', models.CharField(db_column='CLODescription', max_length=2000)),
                ('bloomc', models.CharField(blank=True, db_column='BloomC', max_length=45, null=True)),
                ('bloomp', models.CharField(blank=True, db_column='BloomP', max_length=45, null=True)),
                ('blooma', models.CharField(blank=True, db_column='BloomA', max_length=45, null=True)),
                ('copocorrelation', models.CharField(blank=True, db_column='COPOCorrelation', max_length=45, null=True)),
            ],
            options={
                'db_table': 'clo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('courseid', models.AutoField(db_column='CourseID', primary_key=True, serialize=False)),
                ('coursename', models.CharField(blank=True, db_column='CourseName', max_length=100, null=True)),
                ('coursedescription', models.CharField(blank=True, db_column='CourseDescription', max_length=2000, null=True)),
                ('coursedetail', models.CharField(blank=True, db_column='CourseDetail', max_length=200, null=True)),
            ],
            options={
                'db_table': 'course',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('departmentid', models.AutoField(db_column='DepartmentID', primary_key=True, serialize=False)),
                ('departmentname', models.CharField(blank=True, db_column='DepartmentName', max_length=65, null=True)),
                ('departmentdetails', models.CharField(blank=True, db_column='DepartmentDetails', max_length=1000, null=True)),
            ],
            options={
                'db_table': 'department',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('employeeid', models.IntegerField(db_column='EmployeeID', primary_key=True, serialize=False)),
                ('employeename', models.CharField(blank=True, db_column='EmployeeName', max_length=45, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=45, null=True)),
                ('employeetype', models.CharField(blank=True, db_column='EmployeeType', max_length=45, null=True)),
            ],
            options={
                'db_table': 'employee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('studentid', models.IntegerField(db_column='StudentID', primary_key=True, serialize=False)),
                ('obtainedmarks', models.IntegerField(blank=True, db_column='ObtainedMarks', null=True)),
            ],
            options={
                'db_table': 'evaluation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Plo',
            fields=[
                ('ploid', models.AutoField(db_column='PLOID', primary_key=True, serialize=False)),
                ('plonum', models.CharField(blank=True, db_column='PLONum', max_length=45, null=True)),
                ('plodetail', models.CharField(blank=True, db_column='PLODetail', max_length=2000, null=True)),
            ],
            options={
                'db_table': 'plo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('programid', models.AutoField(db_column='ProgramID', primary_key=True, serialize=False)),
                ('programname', models.CharField(blank=True, db_column='ProgramName', max_length=100, null=True)),
                ('programdetail', models.CharField(blank=True, db_column='ProgramDetail', max_length=1000, null=True)),
            ],
            options={
                'db_table': 'program',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('questionid', models.AutoField(db_column='QuestionID', primary_key=True, serialize=False)),
                ('questionnumber', models.CharField(blank=True, db_column='QuestionNumber', max_length=45, null=True)),
                ('questiondetail', models.CharField(blank=True, db_column='QuestionDetail', max_length=3000, null=True)),
                ('marks', models.IntegerField(blank=True, db_column='Marks', null=True)),
            ],
            options={
                'db_table': 'question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('schoolid', models.AutoField(db_column='SchoolID', primary_key=True, serialize=False)),
                ('schoolname', models.CharField(blank=True, db_column='SchoolName', max_length=45, null=True)),
                ('schooldetails', models.CharField(blank=True, db_column='SchoolDetails', max_length=1000, null=True)),
            ],
            options={
                'db_table': 'school',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('sectionid', models.AutoField(db_column='SectionID', primary_key=True, serialize=False)),
                ('courseid', models.IntegerField(blank=True, db_column='CourseID', null=True)),
                ('sectionnum', models.CharField(blank=True, db_column='SectionNum', max_length=45, null=True)),
                ('semester', models.CharField(blank=True, db_column='Semester', max_length=45, null=True)),
                ('year', models.TextField(blank=True, db_column='Year', null=True)),
            ],
            options={
                'db_table': 'section',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('studentid', models.CharField(db_column='StudentID', max_length=50, primary_key=True, serialize=False)),
                ('studentname', models.CharField(blank=True, db_column='StudentName', max_length=75, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=75, null=True)),
            ],
            options={
                'db_table': 'student',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseEvaluation',
            fields=[
                ('courseid', models.OneToOneField(db_column='CourseID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='CMAS.course')),
                ('assessmenttools', models.CharField(db_column='AssessmentTools', max_length=45)),
                ('marksdistribution', models.CharField(blank=True, db_column='MarksDistribution', max_length=45, null=True)),
                ('bloomcategory', models.CharField(blank=True, db_column='BloomCategory', max_length=100, null=True)),
            ],
            options={
                'db_table': 'course_evaluation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseOutline',
            fields=[
                ('courseid', models.OneToOneField(db_column='CourseID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='CMAS.course')),
                ('deptname', models.CharField(blank=True, db_column='DeptName', max_length=80, null=True)),
                ('schoolname', models.CharField(blank=True, db_column='SchoolName', max_length=400, null=True)),
                ('coursecode', models.CharField(blank=True, db_column='CourseCode', max_length=45, null=True)),
                ('coursetitle', models.CharField(blank=True, db_column='CourseTitle', max_length=45, null=True)),
                ('coursetype', models.CharField(blank=True, db_column='CourseType', max_length=45, null=True)),
                ('creditvalue', models.CharField(blank=True, db_column='CreditValue', max_length=45, null=True)),
                ('contacthour_week', models.CharField(blank=True, db_column='ContactHour/Week', max_length=45, null=True)),
                ('coursedescription', models.CharField(blank=True, db_column='CourseDescription', max_length=3000, null=True)),
                ('courseobjective', models.CharField(blank=True, db_column='CourseObjective', max_length=3000, null=True)),
                ('coursecontent', models.CharField(blank=True, db_column='CourseContent', max_length=3000, null=True)),
                ('assessmenttype', models.CharField(blank=True, db_column='AssessmentType', max_length=45, null=True)),
                ('referencebook', models.CharField(blank=True, db_column='ReferenceBook', max_length=3000, null=True)),
            ],
            options={
                'db_table': 'course_outline',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dean',
            fields=[
                ('demployeeid', models.OneToOneField(db_column='DemployeeID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='CMAS.employee')),
            ],
            options={
                'db_table': 'dean',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DepartmentHead',
            fields=[
                ('dhemployeeid', models.OneToOneField(db_column='DHEmployeeID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='CMAS.employee')),
            ],
            options={
                'db_table': 'department_head',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('femployeeid', models.OneToOneField(db_column='FEmployeeID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='CMAS.employee')),
            ],
            options={
                'db_table': 'faculty',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseLesson',
            fields=[
                ('courseid', models.OneToOneField(db_column='CourseID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='CMAS.courseoutline')),
                ('week', models.CharField(db_column='Week', max_length=45)),
                ('topic', models.CharField(blank=True, db_column='Topic', max_length=45, null=True)),
                ('teachingstrategy', models.CharField(blank=True, db_column='TeachingStrategy', max_length=1000, null=True)),
                ('assessmentstrategy', models.CharField(blank=True, db_column='AssessmentStrategy', max_length=1000, null=True)),
                ('clolevel', models.CharField(blank=True, db_column='CLOLevel', max_length=45, null=True)),
            ],
            options={
                'db_table': 'course_lesson',
                'managed': False,
            },
        ),
    ]
